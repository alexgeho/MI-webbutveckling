console.log("blogs.js loaded!");

// –ê–¥—Ä–µ—Å API
const API_URL = "http://localhost:5003";

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–ª–æ–≥–æ–≤
async function loadBlogs() {
  try {
    const res = await fetch(`${API_URL}/blogs`);
    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–ª–æ–≥–æ–≤");

    const data = await res.json();
    console.log("üìå Blogs from API:", data);

    const blogList = document.getElementById("blog-list");
    blogList.innerHTML = ""; // –æ—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫

    // –∫–Ω–æ–ø–∫–∞ "–í—Å–µ –ø–æ—Å—Ç—ã"
    const allPostsLi = document.createElement("li");
    allPostsLi.className = "list-group-item";
    allPostsLi.innerHTML = `<a href="#" class="blog-link fw-bold" data-id="all">All posts</a>`;
    blogList.appendChild(allPostsLi);

    // —Å–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ –±–ª–æ–≥–æ–≤
    data.items.forEach(blog => {
      const li = document.createElement("li");
      li.className = "list-group-item";
      li.innerHTML = `<a href="#" class="blog-link" data-id="${blog.id}">${blog.name}</a>`;
      blogList.appendChild(li);
    });

    // –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤
    document.querySelectorAll(".blog-link").forEach(link => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        const blogId = link.getAttribute("data-id");
        if (blogId === "all") {
          loadAllPosts(); // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
        } else {
          loadPosts(blogId, link.textContent); // –ø–æ—Å—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–ª–æ–≥–∞
        }
      });
    });

  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–ª–æ–≥–æ–≤:", err);
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
async function loadAllPosts() {
  try {
    const res = await fetch(`${API_URL}/posts`);
    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–æ–≤");

    const data = await res.json();
    console.log("üìå All Posts:", data);

    renderPosts(data.items, "All posts");
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤:", err);
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–ª–æ–≥–∞
// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–ª–æ–≥–∞
async function loadPosts(blogId, blogName) {
  try {
    const res = await fetch(`${API_URL}/blogs/${blogId}/posts`);
    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–æ–≤ –±–ª–æ–≥–∞");

    const data = await res.json();
    console.log(`üìå Posts from ${blogName}:`, data);

    renderPosts(data.items, `Posts from ${blogName}`);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ—Å—Ç–æ–≤ –±–ª–æ–≥–∞:", err);
  }
}


// –†–µ–Ω–¥–µ—Ä –ø–æ—Å—Ç–æ–≤ —Å–µ—Ç–∫–æ–π
function renderPosts(posts, title) {
  const postsContainer = document.getElementById("posts");
  postsContainer.innerHTML = `<h4>${title}</h4>`;

  if (!posts || posts.length === 0) {
    postsContainer.innerHTML += `<p>No posts found</p>`;
    return;
  }

  const row = document.createElement("div");
  row.className = "row row-cols-1 row-cols-md-2 g-4"; // —Å–µ—Ç–∫–∞ 2 –∫–æ–ª–æ–Ω–∫–∏

  posts.forEach(post => {
    const col = document.createElement("div");
    col.className = "col";
    col.innerHTML = `
      <div class="card h-100 shadow-sm">
        <div class="card-body">
          <h5 class="card-title">${post.title}</h5>
          <p class="card-text">${post.shortDescription}</p>
        </div>
        <div class="card-footer text-muted small">
          ${new Date(post.createdAt).toLocaleDateString()}
        </div>
      </div>
    `;
    row.appendChild(col);
  });

  postsContainer.appendChild(row);
}

// –∑–∞–ø—É—Å–∫
document.addEventListener("DOMContentLoaded", () => {
  loadBlogs();
  loadAllPosts(); // —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
});
